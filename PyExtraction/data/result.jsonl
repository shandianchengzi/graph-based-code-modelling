{"orginal_string": "def saveResult(filepath,result):\n  result['repo']=filepath[len(INPUT_DIR):]\n  with open(OUTPUT_DIR+\"result.jsonl\",\"a\",encoding='utf-8') as pf:\n    pf.write(json.dumps(result))\n    pf.write('\\n')\n\n\n", "code": "def saveResult(filepath,result):\n  result['repo']=filepath[len(INPUT_DIR):]\n  with open(OUTPUT_DIR+\"result.jsonl\",\"a\",encoding='utf-8') as pf:\n    pf.write(json.dumps(result))\n    pf.write('\\n')\n", "code_tokens": ["def", "saveResult(filepath,result):\n", "", "result['repo']=filepath[len(INPUT_DIR):]\n", "", "with", "open(OUTPUT_DIR+\"result.jsonl\",\"a\",encoding='utf-8')", "as", "pf:\n", "", "", "", "pf.write(json.dumps(result))\n", "", "", "", "pf.write('\\n')\n"]}
{"orginal_string": "def isDef(line):\ndef isDef(line):\n  if \"def\" not in line.split(\" \"): # \u65e0def\u65f6\n    return False,0\n  lineRmSpace=line.strip()\n  if (lineRmSpace=='') or (lineRmSpace[0]=='#'): # \u8fc7\u6ee4\u7a7a\u884c\u548c\u6ce8\u91ca\u884c\n    return False,0\n  return True\n  \n\n", "code": "def isDef(line):\ndef isDef(line):\n  if \"def\" not in line.split(\" \"): # \u65e0def\u65f6\n    return False,0\n  lineRmSpace=line.strip()\n  if (lineRmSpace=='') or (lineRmSpace[0]=='#'): # \u8fc7\u6ee4\u7a7a\u884c\u548c\u6ce8\u91ca\u884c\n    return False,0\n  return True\n", "code_tokens": ["def", "isDef(line):\ndef", "isDef(line):\n", "", "if", "\"def\"", "not", "in", "line.split(\"", "\"):", "#", "\u65e0def\u65f6\n", "", "", "", "return", "False,0\n", "", "lineRmSpace=line.strip()\n", "", "if", "(lineRmSpace=='')", "or", "(lineRmSpace[0]=='#'):", "#", "\u8fc7\u6ee4\u7a7a\u884c\u548c\u6ce8\u91ca\u884c\n", "", "", "", "return", "False,0\n", "", "return", "True\n"]}
{"orginal_string": "def dealFile(filepath):\ndef dealFile(filepath):\n  tofind = \"\\s*def \"\n  result={}\n  with open(filepath,\"rt\",encoding='utf-8') as f: \n    allLines = f.readlines()                  \n    flag = 0\n    index = 0\n    for line in allLines:\n      # \u4e0d\u5728\u51fd\u6570\u4f53\u5185\u65f6\uff0c\u627e\u5bfbdef\n      if(flag==0):\n        # \u67e5\u627edef\n        if(isDef(line)==False):\n          continue\n        # \u82e5\u6709def\uff0c\u521d\u59cb\u5316\u5404\u79cd\u53c2\u6570\uff0c\u51c6\u5907\u5b58\u50a8\u7ed3\u679c\n        index = line.find(\"def\")\n        flag = 1\n        result={}\n        result['orginal_string']=line\n        result['code']=line\n      # \u5728\u51fd\u6570\u4f53\u5185\u65f6\uff0c\u76f4\u63a5\u5c06\u7ed3\u679c\u52a0\u5230\u540e\u9762\n      else:\n        result['orginal_string']=result['orginal_string']+line\n        lineRmSpace=line.strip()\n        if (lineRmSpace=='') or (lineRmSpace[0]=='#'): # \u8fc7\u6ee4\u7a7a\u884c\u548c\u6ce8\u91ca\u884c\n          continue\n        # \u8bfb\u5230\u51fd\u6570\u4f53\u7ed3\u5c3e\n        if(re.findall(\"\\S\",line[0:index])): # \u82e5\u7b2cindex\u4e2a\u5b57\u7b26\u524d\u4e0d\u662f\u7a7a\u767d\uff0c\u5e76\u4e14\u8be5\u884c\u4e0d\u662f\u7a7a\u884c\u6216\u6ce8\u91ca\n          flag=0\n          saveResult(filepath,result)  # \u5b58\u50a8\u7ed3\u679c\n          if(isDef(line)): # \u82e5\u8be5\u884c\u662f\u65b0\u51fd\u6570\u4f53\u7684\u5f00\u59cb\uff0c\u5219\u76f4\u63a5\u521d\u59cb\u5316\n            index = line.find(\"def\")\n            flag = 1\n            result={}\n            result['orginal_string']=line\n            result['code']=line\n        # \u5e76\u975e\u51fd\u6570\u4f53\u7ed3\u5c3e\n        result['code']=result['code']+line\n     \n    \n\n", "code": "def dealFile(filepath):\ndef dealFile(filepath):\n  tofind = \"\\s*def \"\n  result={}\n  with open(filepath,\"rt\",encoding='utf-8') as f: \n    allLines = f.readlines()                  \n    flag = 0\n    index = 0\n    for line in allLines:\n      if(flag==0):\n        if(isDef(line)==False):\n          continue\n        index = line.find(\"def\")\n        flag = 1\n        result={}\n        result['orginal_string']=line\n        result['code']=line\n      else:\n        result['orginal_string']=result['orginal_string']+line\n        lineRmSpace=line.strip()\n        if (lineRmSpace=='') or (lineRmSpace[0]=='#'): # \u8fc7\u6ee4\u7a7a\u884c\u548c\u6ce8\u91ca\u884c\n          continue\n        if(re.findall(\"\\S\",line[0:index])): # \u82e5\u7b2cindex\u4e2a\u5b57\u7b26\u524d\u4e0d\u662f\u7a7a\u767d\uff0c\u5e76\u4e14\u8be5\u884c\u4e0d\u662f\u7a7a\u884c\u6216\u6ce8\u91ca\n          flag=0\n          saveResult(filepath,result)  # \u5b58\u50a8\u7ed3\u679c\n          if(isDef(line)): # \u82e5\u8be5\u884c\u662f\u65b0\u51fd\u6570\u4f53\u7684\u5f00\u59cb\uff0c\u5219\u76f4\u63a5\u521d\u59cb\u5316\n            index = line.find(\"def\")\n            flag = 1\n            result={}\n            result['orginal_string']=line\n            result['code']=line\n        result['code']=result['code']+line\n", "code_tokens": ["def", "dealFile(filepath):\ndef", "dealFile(filepath):\n", "", "tofind", "=", "\"\\s*def", "\"\n", "", "result={}\n", "", "with", "open(filepath,\"rt\",encoding='utf-8')", "as", "f:", "\n", "", "", "", "allLines", "=", "f.readlines()", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "\n", "", "", "", "flag", "=", "0\n", "", "", "", "index", "=", "0\n", "", "", "", "for", "line", "in", "allLines:\n", "", "", "", "", "", "if(flag==0):\n", "", "", "", "", "", "", "", "if(isDef(line)==False):\n", "", "", "", "", "", "", "", "", "", "continue\n", "", "", "", "", "", "", "", "index", "=", "line.find(\"def\")\n", "", "", "", "", "", "", "", "flag", "=", "1\n", "", "", "", "", "", "", "", "result={}\n", "", "", "", "", "", "", "", "result['orginal_string']=line\n", "", "", "", "", "", "", "", "result['code']=line\n", "", "", "", "", "", "else:\n", "", "", "", "", "", "", "", "result['orginal_string']=result['orginal_string']+line\n", "", "", "", "", "", "", "", "lineRmSpace=line.strip()\n", "", "", "", "", "", "", "", "if", "(lineRmSpace=='')", "or", "(lineRmSpace[0]=='#'):", "#", "\u8fc7\u6ee4\u7a7a\u884c\u548c\u6ce8\u91ca\u884c\n", "", "", "", "", "", "", "", "", "", "continue\n", "", "", "", "", "", "", "", "if(re.findall(\"\\S\",line[0:index])):", "#", "\u82e5\u7b2cindex\u4e2a\u5b57\u7b26\u524d\u4e0d\u662f\u7a7a\u767d\uff0c\u5e76\u4e14\u8be5\u884c\u4e0d\u662f\u7a7a\u884c\u6216\u6ce8\u91ca\n", "", "", "", "", "", "", "", "", "", "flag=0\n", "", "", "", "", "", "", "", "", "", "saveResult(filepath,result)", "", "#", "\u5b58\u50a8\u7ed3\u679c\n", "", "", "", "", "", "", "", "", "", "if(isDef(line)):", "#", "\u82e5\u8be5\u884c\u662f\u65b0\u51fd\u6570\u4f53\u7684\u5f00\u59cb\uff0c\u5219\u76f4\u63a5\u521d\u59cb\u5316\n", "", "", "", "", "", "", "", "", "", "", "", "index", "=", "line.find(\"def\")\n", "", "", "", "", "", "", "", "", "", "", "", "flag", "=", "1\n", "", "", "", "", "", "", "", "", "", "", "", "result={}\n", "", "", "", "", "", "", "", "", "", "", "", "result['orginal_string']=line\n", "", "", "", "", "", "", "", "", "", "", "", "result['code']=line\n", "", "", "", "", "", "", "", "result['code']=result['code']+line\n"]}
{"orginal_string": "def searchInDir(dirname):\ndef searchInDir(dirname):\n  for root,dirs,files in os.walk(dirname):\n    # \u9012\u5f52\u904d\u5386\u76ee\u5f55\n    for dir in dirs:\n      searchInDir(dir)\n    for filename in files:\n      # \u8fc7\u6ee4.py\u6587\u4ef6\n      if(os.path.splitext(filename)[1]!='.py'):\n        continue\n      # \u5904\u7406\u6587\u4ef6\n      filepath = os.path.join(root,filename)\n      dealFile(filepath)\n      \n      \n", "code": "def searchInDir(dirname):\ndef searchInDir(dirname):\n  for root,dirs,files in os.walk(dirname):\n    for dir in dirs:\n      searchInDir(dir)\n    for filename in files:\n      if(os.path.splitext(filename)[1]!='.py'):\n        continue\n      filepath = os.path.join(root,filename)\n      dealFile(filepath)\n", "code_tokens": ["def", "searchInDir(dirname):\ndef", "searchInDir(dirname):\n", "", "for", "root,dirs,files", "in", "os.walk(dirname):\n", "", "", "", "for", "dir", "in", "dirs:\n", "", "", "", "", "", "searchInDir(dir)\n", "", "", "", "for", "filename", "in", "files:\n", "", "", "", "", "", "if(os.path.splitext(filename)[1]!='.py'):\n", "", "", "", "", "", "", "", "continue\n", "", "", "", "", "", "filepath", "=", "os.path.join(root,filename)\n", "", "", "", "", "", "dealFile(filepath)\n"]}
